---
import { Image } from "astro:assets"
import Loading from "@assets/loading.svg"
import { State, getStateString } from "@types"
---

<section id="loader">
    <p>{getStateString(State.CONNECTING)}</p>
    <Image src={Loading} alt="Chargement..." />
    <button class="hidden" type="button">Se reconnecter</button>
</section>

<script>
    import { Event, getStateString, State, dispatchEvent } from "@types"

    const loader: HTMLElement = document.getElementById("loader")!
    const p: HTMLElement = loader.querySelector("p")!
    const img: HTMLImageElement = loader.querySelector("img")!
    const button: HTMLButtonElement = loader.querySelector("button")!

    button.addEventListener("click", () => {
        dispatchEvent(Event.CONNECT)
    })

    document.addEventListener(Event.LOCAL_STATUS, (event: any) => {
        const status: State = event.detail
        p.innerText = getStateString(status)
        loader.classList.toggle("hide", status === State.CONNECTED)
        img.classList.toggle("hidden", status === State.DISCONNECTED)
        button.classList.toggle("hidden", status !== State.DISCONNECTED)
    })

    button.click()
</script>

<style>
    #loader {
        z-index: 1000;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        gap: 16px;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(4px);
        transition: opacity 0.3s ease-in-out;

        > p {
            font-size: 1.2em;
        }

        > img {
            transform: scale(2);
        }

        > button {
            padding: 1rem 2rem;
            backdrop-filter: blur(4px);
            background-color: rgba(36, 36, 36, 0.9);
            color: #fff;
            border-radius: 5px;
            cursor: pointer;
            outline: none;
            border: none;
            font-size: 1.1em;
            transition: background-color 0.1s ease-in-out;

            &:hover {
                background-color: rgba(36, 36, 36, 1);
            }
        }
    }
</style>
