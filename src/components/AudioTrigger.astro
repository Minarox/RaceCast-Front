---
import { Icon } from "astro-icon/components"
---

<button id="audio-trigger" type="button" class="hide"
    aria-label="Activer l'audio de la diffusion en direct" title="Activer l'audio de la diffusion en direct">
    <Icon name="iconamoon:arrow-right-2" />
    Activer l'audio
</button>

<script>
    import { Event, Position, dispatchEvent, getSettings } from "@types"
    import { RemoteTrackPublication } from "livekit-client"

    const sidebar = document.getElementById("sidebar")
    const button = document.getElementById("audio-trigger")!
    let needInteraction = false
    let hasMicrophone = false

    function buttonPositionHandler() {
        const settings = getSettings()
        if (settings.sidebar.position === Position.LEFT) {
            button.classList.add("padding")
        } else {
            button.classList.remove("padding")
        }
    }

    function updateButtonVisibility() {
        if (needInteraction && hasMicrophone) {
            button.classList.remove("hide")
        } else {
            button.classList.add("hide")
        }
    }

    button.addEventListener("click", () => {
        dispatchEvent(Event.RESUME_AUDIO)
        button.classList.add("hide")
    })

    document.addEventListener(Event.NEED_USER_INTERACTION, () => {
        needInteraction = true
        updateButtonVisibility()
    })

    document.addEventListener(Event.MICROPHONES, (event: any) => {
		const audioTracks: RemoteTrackPublication[] = event.detail
        hasMicrophone = audioTracks.length > 0
        updateButtonVisibility()
	})

    document.addEventListener(Event.HIDE_AUDIO_TRIGGER, () => {
        button.classList.add("hide")
    })

    if (sidebar) {
        document.addEventListener(Event.SETTINGS, buttonPositionHandler)
        buttonPositionHandler()
    }
</script>

<style>
    #audio-trigger {
        position: fixed;
        top: 1rem;
        left: 1rem;
        padding: 0.8rem 1.2rem;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(4px);
        color: #fff;
        border-radius: 5px;
        cursor: pointer;
        outline: none;
        border: none;
        font-size: 1.1em;
        transition: background-color 0.1s ease-in-out, opacity 0.3s ease-in-out;
        display: flex;
        gap: 0.5rem;

        &.padding {
            top: 4rem;
        }

        @media screen and (max-width: 768px) {
            left: 50%;
            transform: translateX(-50%);
        }
    }
</style>
